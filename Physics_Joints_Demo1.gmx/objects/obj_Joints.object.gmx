<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Ship first!
instance_create(room_width/2, room_height/2, obj_Ship);



//REVOLUTE JOINT
var jointFixture, solidFixture, instA, instB;
//Create fixtures
solidFixture = physics_fixture_create();
jointFixture = physics_fixture_create();

//Set shapes
physics_fixture_set_circle_shape(solidFixture, 20);
physics_fixture_set_box_shape(jointFixture, 10, 20);

//Set properties
physics_fixture_set_density(jointFixture, 0.5);
physics_fixture_set_restitution(jointFixture, 0.8);

//Create instances
instA = instance_create(60, 70, obj_BodyParent);
instB = instance_create(60, 100, obj_BodyParent);

//Bind fixtures
physics_fixture_bind(solidFixture, instA);
physics_fixture_bind(jointFixture, instB);

//Create joint
physics_joint_revolute_create(instA, instB, 60, 80, -80, 80, 0, 10, -0.5, 1, 0);



//PRISMATIC JOINT
//Create Instances
instA = instance_create(room_width - 60, 90, obj_BodyParent);
instB = instance_create(room_width - 60, 120, obj_BodyParent);

//Bind fixtures (re-use the ones previously created)
physics_fixture_bind(solidFixture, instA);
physics_fixture_bind(jointFixture, instB);

//Create joint
physics_joint_prismatic_create(instA, instB, room_width - 60, 90, 0, 1, 0, 100, true, 1, 1, true, false);



//PULLEY JOINT
//Create instances
instA = instance_create(150, room_height - 100, obj_BodyParent);
instB = instance_create(room_width - 150, room_height - 90, obj_BodyParent);

//Bind fixtures (re-use previous ones)
physics_fixture_bind(jointFixture, instA);
physics_fixture_bind(jointFixture, instB);

//Create joint
physics_joint_pulley_create(instA, instB, 150, room_height - 140, room_width - 170, room_height - 140, 0, 0, 0, 0, 0.5, false);



//GEAR JOINT

//STEP 1 - Prepare ground instance and fixture

//vars
var groundFixture, ground, circleFixture, prismaticJoint, prismaticJoint2, revoluteJoint, revoluteJoint2, instC;

//Create instance
ground = instance_create(60, room_height - 30, obj_BodyParent);

//Create fixture
groundFixture = physics_fixture_create();

//Give fixture shape
physics_fixture_set_box_shape(groundFixture, 40, 10);

//Bind fixture
physics_fixture_bind(groundFixture, ground);



//STEP 2 - Create a circle fixture for the revolute gears
circleFixture = physics_fixture_create();
physics_fixture_set_circle_shape(circleFixture, 10);
physics_fixture_set_density(circleFixture, 0.5);
physics_fixture_set_restitution(circleFixture, 0.8);


//STEP 3 - Setup the middle revolute/prismatic gear
//Create instances
instA = instance_create(40, room_height - 100, obj_BodyParent);
instB = instance_create(60, room_height - 100, obj_BodyParent);

//Bind fixtures
physics_fixture_bind(circleFixture, instA);
physics_fixture_bind(jointFixture, instB);

//Create basic joints and store their indices in variables
revoluteJoint = physics_joint_revolute_create(ground, instA, 40, room_height - 100, -80, 80, 1, 10, 0, 0, 0);
prismaticJoint = physics_joint_prismatic_create(ground, instB, 60, room_height - 100, 0, 1, -30, 40, true, 0, 0, 0, 0);

//Create the gear joint 
physics_joint_gear_create(instA, instB, revoluteJoint, prismaticJoint, 0.5);



//STEP 4 - Setup a revolute/revolute gear
//Create an instance
instA = instance_create(20, room_height - 100, obj_BodyParent);

//Bind fixture
physics_fixture_bind(circleFixture, instA);

//Create basic revolute joint
revoluteJoint2 = physics_joint_revolute_create(ground, instA, 20, room_height - 100, -80, 80, 1, 10, 0, 0, 0);

//Add joint to gear
physics_joint_gear_create(instA, instB, revoluteJoint, revoluteJoint2, 0.5);



//STEP 5 - Setup a prismatic/prismatic gear
//Create instance
instC = instance_create(80, room_height - 100, obj_BodyParent);

//Bind fixture
physics_fixture_bind(jointFixture, instC);

//Create basic joint
prismaticJoint2 = physics_joint_prismatic_create(ground, instC, 80, room_height - 100, 0, 1, -80, 40, true, 30, -0.4, 1, 0);

//Add joint to gear
physics_joint_gear_create(instB, instC, prismaticJoint, prismaticJoint2, 0.5);



//CLEAN UP!
physics_fixture_delete(jointFixture);
physics_fixture_delete(circleFixture);
physics_fixture_delete(groundFixture);
physics_fixture_delete(solidFixture);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
